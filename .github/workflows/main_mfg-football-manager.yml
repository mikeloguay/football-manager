# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy ASP.Net Core app to Azure Web App - mfg-football-manager

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  
  build_push_to_acr:
    name: 'Docker Build and Push to ACR'
    runs-on: ubuntu-latest
    environment: production
  
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
  
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4
  
    - name: 'Docker Login'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build the frontend image and push it to ACR
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: ${{ secrets.REGISTRY_LOGIN_SERVER }}/footbal-manager-image:${{ github.sha }}
        file: src/FootbalManagerApi/Dockerfile
        context: src

  deploy_from_acr:
    runs-on: ubuntu-latest
    needs: build_push_to_acr
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'football-manager-webapp'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_a47f411e3c7a4befb93320daace625a4 }}
        images: 'mfgdocker.azurecr.io/${{ secrets.AzureAppService_ContainerUsername_8a2c4fb55bbc44d5979b83c1ae1cb1bc }}/footbal-manager-image:${{ github.sha }}'

  build:
    if: false
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.x'

      - name: Build with dotnet
        run: dotnet build src/FootbalManager.sln --configuration Release

      - name: dotnet publish
        run: dotnet publish src/FootbalManagerApi/FootbalManagerApi.csproj -c Release -o ${{env.DOTNET_ROOT}}/football-api

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: football-app-artifact
          path: ${{env.DOTNET_ROOT}}/football-api

  deploy_from_artifact:
    if: false
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: football-app-artifact
      
      - name: Login to Azure
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_7D58CA88B8F74A8A9372CEBA83A60DA0 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_CB5B68481BFD4DF694475CA842D88324 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_9ADE06D1D5924351A3142CA41E1C8C79 }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'mfg-football-manager'
          slot-name: 'Production'
          package: .
          